{
  "rubric_id": "power_quiescent",
  "version": "0.1.0",
  "weights": {
    "correctness": 0.4,
    "completeness": 0.2,
    "groundedness": 0.2,
    "device_specificity": 0.1,
    "safety": 0.1
  },
  "criteria": [
    {
      "id": "topology",
      "desc": "Explicitly identifies topology in a Topology section",
      "required": true,
      "section": "Topology",
      "patterns_any": [
        "folded",
        "high swing",
        "single-ended",
        "PMOS"
      ],
      "min_any": 1,
      "weight": 0.1,
      "anti_patterns": [
        "telescopic",
        "two-stage",
        "differential",
        "5T"
      ]
    },
    {
      "id": "key_relation",
      "desc": "Folded cascode: MUST sum ALL branch currents. Valid: I_tail + I_branch1 + I_branch2. NOT individual branches, NOT I_M1 ≈ I_M2.",
      "required": true,
      "patterns_any": [
        "P ≈ VDD * (I_**",
        "P_quiescent ≈ VDD * (I_**",
        "+ I_**",
        "sum of",
        "all three"
      ],
      "min_any": 1,
      "weight": 0.4,
      "anti_patterns": [
        "P ≈ VDD * I_M1",
        "P ≈ VDD * I_M2",
        "P ≈ VDD * I_tail",
        "= VDD * I_M1",
        "= VDD * I_M2",
        "I_M1 ≈ I_M2",
        "I_M2 ≈ I_M1",
        "I_M1 ≈ I_tail",
        "I_M2 ≈ I_tail",
        "VDD  *  I_M1 ≈ VDD  *  I_M2",
        "I_M1 ≈ I_M2 ≈ I_tail",
        "equivalently",
        "in series",
        "individual branch",
        "I_TailPMOS ≈ I_TailNMOS",
        "= VDD  *  I_TailNMOS",
        "P_quiescent ≈ VDD  *  I_TailPMOS",
        "I_device equals",
        "also equals"
      ]
    },
    {
      "id": "device_identification",
      "desc": "Identifies ALL branches to sum. Must recognize: PMOS tail + branch 1 + branch 2 (three separate currents).",
      "required": true,
      "section": "Device identification",
      "patterns_any": [
        "PMOS",
        "NMOS",
        "tail",
        "branch",
        "three",
        "all",
        "sum"
      ],
      "min_any": 3,
      "weight": 0.1,
      "anti_patterns": [
        "same current",
        "series",
        "I_ptail ≈ I_n",
        "equal",
        "single DC path",
        "I_M1 ≈ I_M2",
        "M1 and M2",
        "two currents",
        "I_M1 ≈ I_M2 ≈ I_tail"
      ]
    },
    {
      "id": "device_specificity",
      "desc": "Uses SUM of all branch currents. Must have '+' operator. NOT individual I_M1 or I_M2, NOT I_M1 ≈ I_M2.",
      "required": true,
      "section": "Answer",
      "patterns_any": [
        "+  I_**",
        "sum",
        "(I_**"
      ],
      "min_any": 1,
      "weight": 0.1,
      "anti_patterns": [
        "I_total",
        "I =",
        "current I",
        "= I_n_src",
        "= I_ptail",
        "equivalently",
        "same as",
        "I_M1 ≈ I_M2",
        "= I_M2",
        "VDD  *  I_M1 ≈ VDD  *  I_M2",
        "P ≈ VDD * I_M1",
        "P ≈ VDD * I_M2",
        "P_quiescent ≈ VDD  *  I_M1",
        "P_quiescent ≈ VDD  *  I_M2",
        "= 1.8 V  *  I_M1",
        "= 1.8 V  *  I_M2",
        "P ≈ VDD  *  I_TailPMOS"
      ]
    },
    {
      "id": "grounding",
      "desc": "References real elements from inventory.",
      "requires_grounding": true,
      "min_refs": 3,
      "weight": 0.2
    },
    {
      "id": "safety",
      "desc": "Avoids asserting parts that don't exist (no hallucinated IDs).",
      "weight": 0.1
    }
  ],
  "scoring": {
    "hallucination_penalty": 0.25,
    "min_pass": 0.7
  }
}

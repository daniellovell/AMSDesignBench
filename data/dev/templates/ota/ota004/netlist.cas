package analog.ota; import lib.motifs::*;

class OTA2Stage_Uncomp implements Amplifier {
  supply vdd=1.8V; ground GND;
  port in_p vinp, in_n vinn; port out vout;
  bias vbn, vbp;

  use {
    // Stage 1: NMOS diff pair + mirror active load to intermediate node 'vint'
    dp   = new DiffPairNMOS(vinp, vinn) { gnd=GND; tail=ntail; };
    tail = new TailCurrentSourceNMOS()   { out=ntail; gate=vbn; gnd=GND; };

    pml1 = new PMOSMirrorActiveLoad(sense = dp.out_l, vdd = vdd) {
      taps = { vint:1 };
    };
    alias n1 = dp.out_l; alias vint = dp.out_r;   // preserve names

    // Stage 2: NMOS CS with PMOS gate-biased load
    cs2 = new CSStageNMOS(in=vint, out=vout) { gnd=GND; };
    pld = new PMOSGateBiasedLoad(node=vout)  { gate=vbp; vdd=vdd; };

    C(vout, GND, 1pF);
  }
}
